name: Auto PR develop → main

on:
  push:
    branches: [develop]

permissions:
  contents: write
  pull-requests: write

jobs:
  open-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Create/Update PR develop -> main
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = 'develop';
            const base = 'main';

            // Check diff between base and head
            const cmp = await github.rest.repos.compareCommitsWithBasehead({
              owner,
              repo,
              basehead: `${base}...${head}`,
            });
            const ahead = cmp.data.ahead_by;

            // Find existing open PR from develop -> main
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${head}`,
              base,
            });
            const existing = prs.data[0];

            if (ahead <= 0) {
              if (existing) {
                await github.rest.pulls.update({ owner, repo, pull_number: existing.number, state: 'closed' });
                core.info(`Closed stale PR #${existing.number} (no diffs).`);
              } else {
                core.info('No diffs; no PR needed.');
              }
              return;
            }

            let pr = existing;
            if (!pr) {
              pr = (await github.rest.pulls.create({
                owner,
                repo,
                head,
                base,
                title: 'Auto PR: develop → main',
                body: 'Automatyczny PR synchronizujący develop → main. Auto-merge: squash.',
                maintainer_can_modify: true,
                draft: false,
              })).data;
              core.info(`Created PR #${pr.number}`);
            } else {
              await github.rest.pulls.update({ owner, repo, pull_number: pr.number, title: 'Auto PR: develop → main' });
              core.info(`Updated existing PR #${pr.number}`);
            }

            // Try to enable auto-merge (squash). Requires repo setting to allow auto-merge.
            try {
              const query = `
                mutation($prId: ID!, $method: PullRequestMergeMethod!) {
                  enablePullRequestAutoMerge(input: { pullRequestId: $prId, mergeMethod: $method }) {
                    clientMutationId
                  }
                }
              `;
              await github.graphql(query, { prId: pr.node_id, method: 'SQUASH' });
              core.info('Auto-merge enabled (squash).');
            } catch (e) {
              core.warning('Could not enable auto-merge: ' + e.message);
            }


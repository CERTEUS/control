# +=====================================================================+
# |                          CERTEUS                                    |
# +=====================================================================+
# | FILE: .github/workflows/ci.yml                                      |
# | ROLE: Continuous Integration pipeline for Control & Certeus         |
# | PLIK: .github/workflows/ci.yml                                      |
# | ROLA: Pipeline ciƒÖg≈Çej integracji dla Control i Certeus             |
# +=====================================================================+

# PL: Workflow CI z testami, lintingiem i bramkami jako≈õci zgodnie ze standardem v3.0
# EN: CI workflow with tests, linting and quality gates according to standard v3.0

name: Control CI

on:
  push:
    branches: [main, work/daily]
  pull_request:
    branches: [main]

jobs:
  coding-standard-check:
    name: "Coding Standard v3.0 Compliance"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - name: Check ForgeHeader v3 compliance
        run: |
          echo "Checking ForgeHeader v3 compliance..."
          python -c "
          import os
          import sys
          from pathlib import Path

          def check_forgeheader(file_path):
              with open(file_path, 'r', encoding='utf-8') as f:
                  content = f.read()

              # Check for CERTEUS header
              if 'CERTEUS' not in content[:1000]:
                  return False

              # Check for FILE: and ROLE: lines
              if 'FILE:' not in content[:1000] or 'ROLE:' not in content[:1000]:
                  return False

              return True

          failed_files = []

          # Check Python files
          for py_file in Path('.').rglob('*.py'):
              if any(skip in str(py_file) for skip in ['.venv', '__pycache__', '.git', 'build']):
                  continue

              if not check_forgeheader(py_file):
                  failed_files.append(str(py_file))

          if failed_files:
              print('‚ùå Files missing ForgeHeader v3:')
              for f in failed_files:
                  print(f'  - {f}')
              sys.exit(1)
          else:
              print('‚úÖ All files have ForgeHeader v3')
          "

  test-control:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install control dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest-cov

      - name: Run control tests with coverage
        run: |
          pytest tests/ -v --cov=control --cov-report=term-missing --cov-fail-under=80

      - name: Enterprise Code Quality Check
        run: |
          echo "üîç Running Enterprise Quality Checks (Standard v3.0)..."
          ruff check . --statistics
          ruff format --check .

      - name: Type checking with mypy
        run: |
          pip install mypy
          mypy control/ --ignore-missing-imports || true

  test-certeus:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Test certeus (quick smoke test)
        run: |
          cd certeus
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install fastapi uvicorn pytest
          pytest -q tests/ || echo "Certeus tests completed"

  integration:
    runs-on: ubuntu-latest
    needs: [test-control, test-certeus]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install control
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Test integration
        run: |
          python -m control.main health
          python -m control.main status
          python -m control.main project list
